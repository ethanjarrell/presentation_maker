<!DOCTYPE html>
<html>

<head>

  <meta charset="utf-8">
  <title>The Talk Maker</title>
  <link rel="stylesheet" href="/talkgenerator.css">
  <link href="https://fonts.googleapis.com/css?family=Slabo+27px" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Volkhov" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

  <!-- <script>
    $(document).ready(function() {
      console.log("talking");

      let topicInput = document.getElementById('topicInput');
      let searchbtn = document.getElementById('searchbtn');
      searchbtn.onclick = searchAPI;

      function searchAPI() {

        let searchResults = topicInput.value;

        fetch('https://owlbot.info/api/v1/dictionary/'+searchResults+'?format=json').then(function(response) {
          if (response.status != 200) {
            window.alert("Sorry, nothing matches those search terms.  Try another search, or use the panel on the left.");
            return;
          }

          response.json().then(function(data) {
            let api = data;

            for (var i = 0; i < 1; i++) {
              let api = data;

              let markup =`
                <p class="genconauthor1">${data[0].defenition}</p>
              `

            document.getElementById('updatediv').innerHTML = markup;
            console.log(markup);
        }})
      })
    }
  })

  </script> -->
<script>
$(window).load(function() {
let labelText = "click here to ";
let labelArray = [
  "make magic happen",
  "unleash the unicorns",
  "hit a bees nest with stick",
  "use a concrete parachute",
  "hit nail with glass hammer",
  "invent the internet",
  "turn on opaque light bulb",
  "watch invisible TV",
  "add your name to the do not call list",
  "print the phonebook",
  "invent gas powered cordless radio",
  "put roller skates on dog",
  "invent wooden chimney",
  "invent leather guitar",
  "install internet explorer",
  "do a yahoo search",
  "order book of the inetnet, volume 2",
  "invent shrimp bubble gum",
  "invent hand cranked electric skateboar",
  "invent glass flyswatter",
  "invent battery powered batteries",
  "replace Iron Man with Dry Clean Man",
  "invent McDonalds Sad Meals",
  "ban prime numbers",
  "invent gas powered solar panel",
  "give 101%",
  "organize a three man quartet",
  "combine a giraffe and a koala",
  "",
];
let randomLabelArray = labelArray[Math.floor(Math.random(1) * labelArray.length)];
let labelOutput = labelText +" "+randomLabelArray;
document.getElementById('label').innerHTML = labelOutput;
})
</script>

  <script>
  $(document).ready(function() {
    console.log("talking");

    let topicInput = document.getElementById('topicInput');
    let genconf = document.getElementById('genconf');
    genconf.onclick = searchAPI;
    console.log(topicInput);
    console.log(genconf);



    function searchAPI() {

      let searchResults = topicInput.value;

      var str = topicInput.value;

      var mapObj = {
        "free agency": "agency",
        "the atonement": "atonement",
        "baptize": "baptism",
        "book of mormon": "bookofmormon",
        "love": "charity",
        "charitable": "charity",
        "pure love": "charity",
        "pure love of christ": "charity",
        "created": "creation",
        "religion": "church",
        "church organization": "church",
        "d&c": "doctrinecovenants",
        "events": "events",
        "heavenly father": "god",
        "father in heaven": "god",
        "god the father": "god",
        "father": "god",
        "belief": "faith",
        "hope": "faith",
        "the holy ghost": "holyghost",
        "holy spirit": "holyghost",
        "holy ghost": "holyghost",
        "spirit": "holyghost",
        "the spirit": "holyghost",
        "honesty": "honesty",
        "honest": "honesty",
        "lie": "honesty",
        "steal": "honesty",
        "integrity": "honesty",
        "bible": "newtestament",
        "new testament": "newtestament",
        "obedience": "obedience",
        "follow": "obedience",
        "submission": "obedience",
        "submissive": "obedience",
        "old testament": "oldtestament",
        "people": "people",
        "melchizedek priesthood": "priesthood",
        "aaronic priesthood": "priesthood",
        "melchizedek": "priesthood",
        "aaronic": "priesthood",
        "prophets of god": "prophets",
        "prophet": "prophets",
        "prophets": "prophets",
        "repent": "repentence",
        "repentance": "repentence",
        "forgiveness": "repentence",
        "bread and water": "sacrament",
        "the sacrament": "sacrament",
        "scripture": "scriptures",
        "scriptures": "scriptures",
        "the scriptures": "scriptures",
        "word of god": "scriptures",
        "labor": "service",
        "work": "service",
        "responsibility": "service",
        "personal responsibility": "service",
        "fall of man": "thefall",
        "the fall": "thefall",
        "fall of mankind": "thefall",
        "fall": "thefall",
        "jesus christ": "jesus",
        "christ": "jesus",
        "savior": "jesus",
        "redeemer": "jesus",
        "lord": "jesus",
        "fall of adam": "thefall",
        "garden of eden": "thefall",
        "lucifer": "thefall",
        "original sin": "thefall",
        "law of health": "wordofwisdom",
        "word of wisdom": "wordofwisdom",
        "apostles": "apostle",
        "the godhead": "godhead",
        "revelation": "testimony",
        "truth": "testimony",
        "testify": "testimony",
        "conversion": "testimony",
        "devil": "hell",
        "satan": "hell",
        "damnation": "hell",
        "torment": "hell",
        "eternal marriage": "marriage",
        "temple marriage": "marriage",
        "fire and brimstone": "hell",
        "celestial kingdom": "heaven",
        "plan of salvation": "heaven",
        "telestial": "heaven",
        "exaltation": "heaven",
        "immortality": "heaven",
        "eternal life": "heaven",
        "three degrees of glory": "heaven",
        "missionaries": "missionary",
        "preach": "missionary",
        "preaching": "missionary",
        "missionary work": "missionary",
        "christmas": "nativity",
        "church history": "pioneer",
        "pioneers": "pioneer",
        "handcarts": "pioneer",
        "nauvoo": "pioneer",
        "premortal existence": "premortal",
        "council in heaven": "premortal",
        "premortal life": "premortal",
        "war in heaven": "premortal",
        "easter": "resurrection",
        "resurrected": "resurrection",
        "crucifixion": "resurrection",
        "cross": "resurrection",
        "the resurrection": "resurrection",
        "woman": "women",
        "widow": "women",
        "mary": "women",
        "mothers": "women",
        "mother": "women",
        "motherhood": "women",
        "daughter": "women",
        "daughters": "women",
        "relief society": "women",
        "daughters of god": "women",
        "the great apostasy": "apostasy",
        "restoration": "apostasy",
        "first vision": "apostasy",
        "the first vision": "apostasy",
        "the restoration": "apostasy",
        "apostasy and restoration": "apostasy",
        "first vision": "apostasy",
        "family home evening": "family",
        "family prayer": "family",
        "eternal family": "family",
        "virtue": "chastity",
        "chaste": "chastity",
        "virtuous": "chastity",
        "child": "children",
        "primary": "children",
        "primary children": "children",
        "covenant": "covenants",
        "temple covenant": "covenants",
        "temple covenants": "covenants",
        "baptismal covenant": "covenants",
        "baptismal covenants": "covenants",
        "life after death": "death",
        "die": "death",
        "mortality": "death",
        "family history": "genealogy",
        "ancestors": "genealogy",
        "family tree": "genealogy",
        "spiritual gifts": "giftsofthespirit",
        "gifts of the spirit": "giftsofthespirit",
        "good news": "gospel",
        "good news of the gospel": "gospel",
        "the gospel": "gospel",
        "gospel": "gospel",
        "plan of salvation": "gospel",
        "the plan of salvation": "gospel",
        "happy": "happiness",
        "joy": "happiness",
        "plan of happiness": "happiness",
        "miracle": "miracles",
        "brigham young": "brighamyoung",
        "brigham": "brighamyoung",
        "davdid bednar": "dabednar",
        "bednar": "dabednar",
        "davdid a. bednar": "dabednar",
        "daivd o mckay": "davidomckay",
        "daivd o. mckay": "davidomckay",
        "uchtdorf": "dfuchtdorf",
        "dieter uchtdorf": "dfuchtdorf",
        "dieter f. uchtdorf": "dfuchtdorf",
        "renlund": "dgrenlund",
        "dale g. renlund": "dgrenlund",
        "oaks": "dhoaks",
        "dallin h. oaks": "dhoaks",
        "D. Todd Christofferson": "dtchristofferson",
        "Christofferson": "dtchristofferson",
        "benson": "ezrataftbenson",
        "ezra taft benson": "ezrataftbenson",
        "benson": "ezrataftbenson",
        "george a. smith": "georgeasmith",
        "george albert smith": "georgeasmith",
        "gary e. stevenson": "gestevenson",
        "gordon b. hinckley": "gordonbhinckley",
        "hinckley": "gordonbhinckley",
        "harold b. lee": "haroldblee",
        "eyring": "hbeyring",
        "henry b. eyring": "hbeyring",
        "grant": "heberjgrant",
        "heber j. grant": "heberjgrant",
        "howard w. hunter": "howardwhunter",
        "hunter": "howardwhunter",
        "john taylor": "johntaylor",
        "joseph fielding smith": "josephfieldingsmith",
        "joseph f. smith": "josephfsmith",
        "joseph smith": "josephsmith",
        "joseph": "josephsmith",
        "jeffrey r. holland": "jrholland",
        "holland": "jrholland",
        "lorenzo snow": "lorenzosnow",
        "snow": "lorenzosnow",
        "m. russell ballard": "mrballard",
        "ballard": "mrballard",
        "neil l. anderson": "nlanderson",
        "quentin l. cook": "qlcook",
        "rasband": "rarasband",
        "ronald a. rasband": "rarasband",
        "russell m. nelson": "rmnelson",
        "nelson": "rmnelson",
        "spencer w. kimball": "spencerkimball",
        "thomas s. monson": "tsmonson",
        "monson": "tsmonson",
        "woodruff": "wilfordwoodruff",
        "wilford woodruff": "wilfordwoodruff",
        "self reliance": "selfreliance",
        "self-reliance": "selfreliance",
        "second coming": "secondcoming",
        "the second coming": "secondcoming",
        "miracles": "miracles",
        "miracle": "miracles",
      };
      var re = new RegExp(Object.keys(mapObj).join("|"), "gi");
      str = str.replace(re, function(matched) {
        return mapObj[matched.toLowerCase()];
      });





      fetch('https://presentation-maker.herokuapp.com/api/scriptures/' + str).then(function(response) {
        if (response.status != 200) {
          window.alert("Sorry, nothing matches those search terms.  Try a different word, or a similar terms.");
          return;
        }



        response.json().then(function(data) {
          let api = data;
          let bookArray = [];

          let standardWork = "";
          let book = "";
          let verses = "";
          let verse_text = "";
          let chapter = "";
          let speaker = "";
          let listener = "";
          let newObj = {};
          let objectArray = [];


            for (var i = 0; i < api.length; i++) {
              let book = api[i].book_and_verse_number;

             let verse_text = api[i].verse_text;
              bookArray.push(book);
              bookArray.push(verse_text);




            for (var i = 0; i < bookArray.length; i++) {
              let a = [];
              function determineVerses(x) {
                if (x[i].length > 0) {
                let verses = x[i].match(/\d+/g);
                x[i].match( verses );
                a.push(verses);
            }else{
            }
            return a;
          }
           verses = determineVerses(bookArray);



               str = bookArray,
                  matches = bookArray[i].match(/\d+$/),
                  chapter;

              if (matches) {
                  chapter = matches[0];
              }
               book = bookArray[i].replace(/\d+$/, "");
            let newBook = book.toLowerCase();
            let newerBook = newBook.replace(/ /g,'');
            let newChapter = parseInt(chapter);



            switch (newerBook) {
              case '1nephi' :
              standardWork = "The Book of Mormon";
              break;

              case '2nephi' :
              standardWork = "The Book of Mormon";
              break;

              case 'jacob' :
              standardWork = "The Book of Mormon";
              break;

              case 'enos' :
              standardWork = "The Book of Mormon";
              break;

              case 'jarom' :
              standardWork = "The Book of Mormon";
              break;

              case 'omni' :
              standardWork = "The Book of Mormon";
              break;

              case 'wordsofmormon' :
              standardWork = "The Book of Mormon";
              break;

              case 'mosiah' :
              standardWork = "The Book of Mormon";
              break;

              case 'alma' :
              standardWork = "The Book of Mormon";
              break;

              case 'helaman' :
              standardWork = "The Book of Mormon";
              break;

              case '3nephi' :
              standardWork = "The Book of Mormon";
              break;

              case '4nephi' :
              standardWork = "The Book of Mormon";
              break;

              case 'mormon' :
              standardWork = "The Book of Mormon";
              break;

              case 'ether' :
              standardWork = "The Book of Mormon";
              break;

              case 'moroni':
              standardWork = "The Book of Mormon";
              break;

              standardWork = "The Book of Mormon";
              break;

              default:
              standardWork = "The New Testament";
            }


            function determineSpeakerAndListener(a, b) {

              let speaker = "";
              let listener = "";

              if (a == '1nephi') {
                speaker = "Nephi";
                listener = "his family";
              }

              else if (a == '2nephi') {
                speaker = "Nephi";
                listener = "his family";
              }

              else if (a == 'jacob') {
                speaker = "Jacob";
                listener = "readers of the Book of Mormon";
              }

              else if (a == 'enos') {
                speaker = "Enos";
                listener = "his posterity";
              }

              else if (a == 'jarom') {
                speaker = "Jarom";
                listener = "his family";
              }

              if (a == 'omni') {
                speaker = "Omni";
                listener = "future generations";
              }

              if (a == 'wordsofmormon') {
                speaker = "Mormon";
                listener = "those who would read the Book of Mormon";
              }

              else if ( a == 'mosiah' && ( b == 1 || 2 || 3 || 4 || 5 || 6 )) {
              speaker = "King Benjamin";
              listener = "His sons and his people"; }



              else if ( a == 'mosiah' && ( b == 7 || 8 )) {
              speaker = "Ammon";
              listener = "The people of Limhi"; }



              else if ( a == 'mosiah' && ( b == 9 || 10 )) {
              speaker = "Zeniff";
              listener = "His people"; }



              else if ( a == 'mosiah' && ( b == 11 || 12 || 13 )) {
              speaker = "Abinadi";
              listener = "The wicked King Noah"; }



              else if ( a == 'mosiah' && ( b == 14  )) {
              speaker = "Isaiah";
              listener = "A future generation"; }



              else if ( a == 'mosiah' && ( b == 17 || 18 )) {
              speaker = "Alma the Elder";
              listener = "a small group of believers"; }



              else if ( a == 'mosiah' && ( b == 21 )) {
              speaker = "Ammon";
              listener = "The people of Limhi"; }



              else if ( a == 'mosiah' && ( b == 22 )) {
              speaker = "Ammon";
              listener = "his people"; }



              else if ( a == 'mosiah' && ( b == 23 || 24 || 25 || 26 )) {
              speaker = "Alma the Elder";
              listener = "members of the Church"; }


              else if ( a == 'mosiah' && ( b == 27 || 28 || 29 )) {
              speaker = "Mosiah";
              listener = "His sons"; }



              else if ( a == 'alma' && ( b == 1 )) {
              speaker = "Gideon";
              listener = "His sons and his people"; }



              else if ( a == 'alma' && ( b == 4 || 5 )) {
              speaker = "Alma the Younger";
              listener = "the people in their cities and villages throughout the land"; }



              else if ( a == 'alma' && ( b == 6 || 7 )) {
              speaker = "Alma the Younger";
              listener = "the people in the land of Gideon"; }



              else if ( a == 'alma' && ( b == 8 )) {
              speaker = "Alma the Younger";
              listener = "Amulek and the people in the land of Ammonihah"; }



              else if ( a == 'alma' && ( b == 9 || 10 )) {
              speaker = "Alma the Younger";
              listener = "Amulek and the people in the land of Ammonihah"; }



              else if ( a == 'alma' && ( b == 11 )) {
              speaker = "Amulek";
              listener = "Zeezrom"; }



              else if ( a == 'alma' && ( b == 12 )) {
              speaker = "Alma the Younger";
              listener = "Zeezrom"; }



              else if ( a == 'alma' && ( b == 13 )) {
              speaker = "Alma the Younger and Amulek";
              listener = "the people in the land of Ammonihah"; }



              else if ( a == 'alma' && ( b == 14 )) {
              speaker = "Alma the Younger and Amulek";
              listener = "the people in the land of Ammonihah"; }



              else if ( a == 'alma' && ( b == 15 )) {
              speaker = "Alma the Younger and Amulek";
              listener = "Zeezrom and the Church in Sidom"; }



              else if ( a == 'alma' && ( b == 16 )) {
              speaker = "Alma the Younger and Amulek";
              listener = "the Church"; }



              else if ( a == 'alma' && ( b == 17 )) {
              speaker = "Ammon";
              listener = "the Lamanites"; }



              else if ( a == 'alma' && ( b == 18 )) {
              speaker = "Ammon";
              listener = "King Lamoni"; }



              else if ( a == 'alma' && ( b == 19 )) {
              speaker = "Ammon";
              listener = "King Lamoni and the Lamanites"; }



              else if ( a == 'alma' && ( b == 20 )) {
              speaker = "Ammon";
              listener = "Lamoni and Lamoni's Father"; }



              else if ( a == 'alma' && ( b == 21 )) {
              speaker = "Aaron";
              listener = "the Amalekites"; }



              else if ( a == 'alma' && ( b == 22 )) {
              speaker = "Ammon";
              listener = "Lamoni's Father"; }



              else if ( a == 'alma' && ( b == 23 )) {
              speaker = "The Sons of Mosiah";
              listener = "the Anti-Nephi-Lehies"; }



              else if ( a == 'alma' && ( b == 24 )) {
              speaker = "The Sons of Mosiah";
              listener = "the Anti-Nephi-Lehies"; }



              else if ( a == 'alma' && ( b == 26 )) {
              speaker = "Ammon";
              listener = "his brethren"; }



              else if ( a == 'alma' && ( b == 27 )) {
              speaker = "Ammon";
              listener = "Alma and the Son's of Mosiah"; }



              else if ( a == 'alma' && ( b == 29 )) {
              speaker = "Alma";
              listener = "the Nephites"; }



              else if ( a == 'alma' && ( b == 30 )) {
              speaker = "Alma";
              listener = "Korihor"; }



              else if ( a == 'alma' && ( b == 31 )) {
              speaker = "Alma";
              listener = "the Zoramites"; }



              else if ( a == 'alma' && ( b == 32 )) {
              speaker = "Alma";
              listener = "the poorer segment of the Zoramites"; }



              else if ( a == 'alma' && ( b == 33 )) {
              speaker = "Zenos and Zenock";
              listener = "a future generation"; }



              else if ( a == 'alma' && ( b == 34 )) {
              speaker = "Amulek";
              listener = "the Church"; }



              else if ( a == 'alma' && ( b == 35 )) {
              speaker = "Alma";
              listener = "the people of Zarahemla"; }



              else if ( a == 'alma' && ( b == 36 )) {
              speaker = "Alma";
              listener = "his son, Helaman"; }



              else if ( a == 'alma' && ( b == 37 )) {
              speaker = "Alma";
              listener = "his son, Helaman"; }



              else if ( a == 'alma' && ( b == 38 )) {
              speaker = "Alma";
              listener = "his son, Shiblon"; }



              else if ( a == 'alma' && ( b == 39 || 40 || 41 || 42 )) {
              speaker = "Alma";
              listener = "his son, Corianton"; }



              else if ( a == 'alma' && ( b == 43 )) {
              speaker = "Alma and his sons";
              listener = "the Zoramites"; }



              else if ( a == 'alma' && ( b == 44 )) {
              speaker = "Captain Moroni";
              listener = "Zerahemnah"; }



              else if ( a == 'alma' && ( b == 45 )) {
              speaker = "Helaman";
              listener = "his people"; }



              else if ( a == 'alma' && ( b == 46 )) {
              speaker = "Captain Moroni";
              listener = "the people of Zarahemla"; }



              else if ( a == 'alma' && ( b == 48 )) {
              speaker = "Captain Moroni";
              listener = "the people of Zarahemla"; }



              else if ( a == 'alma' && ( b == 50 )) {
              speaker = "Captain Moroni";
              listener = "the Nephites"; }



              else if ( a == 'alma' && ( b == 51 )) {
              speaker = "Captain Moroni";
              listener = "Pahoran and the king men"; }



              else if ( a == 'alma' && ( b == 52 )) {
              speaker = "Captain Moroni";
              listener = "his armies"; }



              else if ( a == 'alma' && ( b == 53 )) {
              speaker = "Helaman";
              listener = "the 2000 stripling warriors"; }



              else if ( a == 'alma' && ( b == 54 )) {
              speaker = "Captain Moroni";
              listener = "Ammoron"; }



              else if ( a == 'alma' && ( b == 55 )) {
              speaker = "Captain Moroni";
              listener = "his army and the Lamanties"; }



              else if ( a == 'alma' && ( b == 56 || 57 )) {
              speaker = "Helaman";
              listener = "Moroni"; }



              else if ( a == 'alma' && ( b == 59 || 60 || 61 || 62 )) {
              speaker = "Captain Moroni";
              listener = "Pahoran"; }


              else if ( a == 'helaman' && ( b == 4 || 5 || 6 || 7 || 8 )) {
              speaker = "the missionaries, Nephi and Lehi";
              listener = "the people of Nephi"; }


              else if ( a == 'helaman' && ( b == 9 || 10 || 11 || 12 )) {
              speaker = "Nephi";
              listener = "the people of Nephi"; }


              else if ( a == 'helaman' && ( b == 13 || 14 || 15 )) {
              speaker = "Samuel the Lamanite";
              listener = "the Nephites"; }


              else if ( a == 'helaman' && ( b == 16 )) {
              speaker = "Nephi";
              listener = "the people of Nephi"; }


              else if ( a == '3nephi' && ( b == 1)) {
              speaker = "Nephi";
              listener = "the Nephites"; }


              else if ( a == '3nephi' && ( b == 9 || 10 || 11 || 12 || 13 || 14 || 15 || 16 || 17 || 18 || 19 || 20 || 21 || 22 || 23 || 24 || 25 || 26)) {
              speaker = "Jesus Christ";
              listener = "the Nephites"; }


              else if ( a == '4nephi' && ( b == 1 )) {
              speaker = "Mormon";
              listener = "a future generation"; }


              else if ( a == 'mormon' && ( b == 1 || 2 || 3 || 4 || 5 || 6 || 7 || 8 )) {
              speaker = "Mormon";
              listener = "a future generation"; }


              else {
                speaker = "the main figure here";
                listener = "the people";
              }

              return [speaker, listener];
}
let newBook_andChapter = determineSpeakerAndListener(newerBook, newChapter);
 speaker = newBook_andChapter[0];
 listener = newBook_andChapter[1];


 newObj =
   {"standard_works" : standardWork,
   "book" : book,
   "verses" : verses,
   "verse_text" : verse_text,
   "chapter" : chapter,
   "speaker" : speaker,
   "listener" : listener,};


 function pushToArray(x, y) {

   if (typeof{x} === 'object') {
     y.push(x);
   }
   return y;
 }
 objectArray = pushToArray(newObj, objectArray);

}
          }

          let topic = document.getElementById('topicInput').value;



          let key = "";
          function checkForValue(json, value) {
            for (key in json) {
        if (typeof (json[key]) === "object") {
            return checkForValue(json[key], value);
        } else if (json[key] === value) {
            return true;
            key = value;
        }
    }
    return key;
}
let myValue = checkForValue(mapObj, topic);


          var scripture1 = objectArray[Math.floor(Math.random() * objectArray.length)];


          let verse1 = scripture1.verse_text;

          var scripture2 = objectArray[Math.floor(Math.random() * objectArray.length)];

          let verse2 = scripture2.verse_text;
          var scripture3 = objectArray[Math.floor(Math.random() * objectArray.length)];

          let verse3 = scripture3.verse_text;
          var scripture4 = objectArray[Math.floor(Math.random() * objectArray.length)];

          let verse4 = scripture4.verse_text;
          var scripture5 = objectArray[Math.floor(Math.random() * objectArray.length)];

          let verse5 = scripture5.verse_text;
          let test_str = "";
          let start_pos = "";
          let end_pos = "";
          let text_to_get = "";

          function getPhrase1 (x, y) {

            if(x.includes(key) == true) {
           test_str = y;
             start_pos = test_str.indexOf(key) - 10;
             end_pos = test_str.indexOf(".",start_pos);
             text_to_get = test_str.substring(start_pos,end_pos)

          }else if (x.includes(topic) == true) {
            test_str = y;
              start_pos = test_str.indexOf(topic) - 10;
              end_pos = test_str.indexOf(".",start_pos);
              text_to_get = test_str.substring(start_pos,end_pos)

          } else {
            console.log("NONONONONONONONO");
          }
            return text_to_get;
          }
          let phrase1 = getPhrase1(verse1, verse1);


          function getPhrase2 (x, y) {

            if(x.includes(key) == true) {
           test_str = y;
             start_pos = test_str.indexOf(key) - 10;
             end_pos = test_str.indexOf(".",start_pos);
             text_to_get = test_str.substring(start_pos,end_pos)

          }else if (x.includes(topic) == true) {
            test_str = y;
              start_pos = test_str.indexOf(topic) - 10;
              end_pos = test_str.indexOf(".",start_pos);
              text_to_get = test_str.substring(start_pos,end_pos)

          } else {
            console.log("NONONONONONONONO");
          }
            return text_to_get;
          }
          let phrase2 = getPhrase2(verse2, verse2);



          function getPhrase3 (x, y) {

            if(x.includes(key) == true) {
           test_str = y;
             start_pos = test_str.indexOf(key) - 10;
             end_pos = test_str.indexOf(".",start_pos);
             text_to_get = test_str.substring(start_pos,end_pos)

          }else if (x.includes(topic) == true) {
            test_str = y;
              start_pos = test_str.indexOf(topic) - 10;
              end_pos = test_str.indexOf(".",start_pos);
              text_to_get = test_str.substring(start_pos,end_pos)

          } else {
            console.log("NONONONONONONONO");
          }
            return text_to_get;
          }
          let phrase3 = getPhrase3(verse3, verse3);


          let markup =
            `<p>As I started to ponder the topic of ${topic}, the first question that came to my mind was simply, 'what is ${topic}?' To help me understand more about the topic, and what it really means, I turned to the Scriptures for help.  In ${scripture1.standard_works} I found a passage where ${scripture1.speaker} is addressing ${scripture1.listener}, and explains the significance of ${topic}. In ${scripture1.book}, chapter ${scripture1.chapter} verse ${scripture1.verses} he says:
            </p>
            <p>
              ${verse1}.
            </p>
            <p>
            I really love this passage.  One of the things that stood out to me, is the way ${scripture1.speaker} describes ${topic}:
            </p>
            <p>
            "${phrase1}."
            </p>
            <p>
            From this scripture, it seems like ${scripture1.speaker} is trying to tell us that the meaning of ${topic} is...( insert your own definition here.)
            </p>
            <p>
            (this is a good place for a personal experience you've had that deals with ${topic})
            </p>
            <p>
            As I thought about this, what I really wanted to know is why ${topic} is really important.  Is it simply because of the blessings associated with it?  Or is it because of the transformation it can bring to my character?  For answers to these questions, I again turned to the scriptures, and found some answers in ${scripture2.standard_works}.  In the book of ${scripture2.book}, ${scripture2.speaker} provides some insight while speaking with ${scripture2.listener}. In chapter ${scripture2.chapter}, verse ${scripture2.verses}, we read the following:
            </p>
            <p>
            ${verse2}
            </p>
            <p>
            Now, I just want to re-read that first part.
            "${phrase2}"
            </p>
            <p>
            To me, it's significant that ${scripture2.speaker} seems to draw a connection between ${topic} and ${key}. And that got me thinking.  How can I be more ${topic} minded?  What can I do to do better?  Maybe, as ${scripture2.speaker} says, ${key} really is the key.
            </p>
            <p>
            In order to find ways that I could be more ${topic} minded, I turned to the book of ${scripture3.book}, in ${scripture3.standard_works}, chapter ${scripture3.chapter}, verse ${scripture3.verses} for help.  I was reminded of the way ${scripture3.speaker} described how we can have more ${topic}, as he was speaking with ${scripture3.listener}.  Here's what he says:
            </p>
            <p>
            ${verse3}
            </p>
            <p>
            Notice how ${scripture3.speaker} says, "${phrase3}", again, drawing a connection between ${topic} and ${key}.
            </p>
            `





          document.getElementById('para1').innerHTML = markup;





          //
          //
          // console.log(newObj);
          // let paragraph2 = "As I was preparing to speak today"




})



})
}
})






  </script>
<script>


//
//
// document.getElementById('intro').innerHTML = paragraph1;
//
// document.getElementById('para5').innerHTML = paragraph2;
// document.getElementById('para6').innerHTML = paragraph3;
// document.getElementById('para7').innerHTML = paragraph4;
// document.getElementById('para9').innerHTML = paragraph5;
// document.getElementById('para10').innerHTML = paragraph6;
// document.getElementById('para11').innerHTML = paragraph11;

// }

</script>


</head>

<body id="body">


  <section class="search">
    <label> What is your talk topic? </label>
    <input placeholder="topic" class="videoInput" type="text" id="topicInput">
    </span>
    <h3>Generate Talk -  <label id="label"></label><button class="submitButton2" type="submit" id="genconf" name="button">click here</button></h3>

</section>


<p id="intro"></p>
<p id="para1"></p>
<p id="para2"></p>
<p id="para3"></p>
<p id="para4"></p>
<p id="para5"></p>
<p id="para6"></p>
<p id="para7"></p>
<p id="para8"></p>
<p id="para9"></p>
<p id="para10"></p>
<p id="chapter"></p>
<p id="number"></p>
<p id="verse"></p>
<p id="chapter2"></p>
<p id="number2"></p>
<p id="verse2"></p>

</body>

</html>
